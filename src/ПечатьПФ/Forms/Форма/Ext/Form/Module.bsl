&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	ТаблицаРаспечатаныхЗаявок = Константы.ВременнаяТаблицаЗаявок.Получить().Получить();
	ТаблицаРаспечатаныхЗаявок = ?(ТаблицаРаспечатаныхЗаявок = Неопределено,
		СоздатьВременнуюТаблицу(), ТаблицаРаспечатаныхЗаявок); 
	
	Объект.Клиенты.Очистить();
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	хру_МаршрутКонтрагенты.Ссылка.Наименование КАК НаименованиеМаршрута,
		|	Контрагенты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ втКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.хру_Маршрут.Контрагенты КАК хру_МаршрутКонтрагенты
		|		ПО (Контрагенты.Родитель = хру_МаршрутКонтрагенты.Контрагент.Ссылка
		|				ИЛИ Контрагенты.Ссылка = хру_МаршрутКонтрагенты.Контрагент.Ссылка
		|				ИЛИ Контрагенты.Родитель.Родитель = хру_МаршрутКонтрагенты.Контрагент.Ссылка
		|				ИЛИ Контрагенты.Родитель.Родитель.Родитель = хру_МаршрутКонтрагенты.Контрагент.Ссылка
		|				ИЛИ Контрагенты.Родитель.Родитель.Родитель.Родитель = хру_МаршрутКонтрагенты.Контрагент.Ссылка)
		|ГДЕ
		|	хру_МаршрутКонтрагенты.Ссылка = &Маршрут
		|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтрагентыКонтактнаяИнформация.Представление КАК Представление,
		|	КонтрагентыКонтактнаяИнформация.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ втАдрес
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.Вид = &Вид
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказПокупателя.Ссылка КАК Документ,
		|	ЗаказПокупателя.Контрагент КАК Контрагент,
		|	ЗаказПокупателя.Номер КАК Номер,
		|	втАдрес.Представление КАК Адрес,
		|	ЗаказПокупателя.Дата КАК Дата
		|ИЗ
		|	втКонтрагенты КАК втКонтрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|		ПО втКонтрагенты.Контрагент = ЗаказПокупателя.Контрагент
		|		ЛЕВОЕ СОЕДИНЕНИЕ втАдрес КАК втАдрес
		|		ПО (втАдрес.Контрагент = втКонтрагенты.Контрагент)
		|ГДЕ
		|	ЗаказПокупателя.Дата >= &ДатаНачала
		|	И ЗаказПокупателя.Дата <= &ДатаОкончания
		|
		|УПОРЯДОЧИТЬ ПО
		|	Контрагент
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Маршрут", Объект.Маршрут);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		//РаспечатанныйДокумент = ТаблицаРаспечатаныхЗаявок.Найти(Выборка.Ссылка, "Ссылка");  	
		
		Если ТаблицаРаспечатаныхЗаявок.Найти(Выборка.Документ, "Ссылка") = Неопределено  Тогда	
			ВесПФ = ПолучитьВесПФ(Выборка.Документ); 
			Если ВесПФ <> 0 Тогда
				Строка = Объект.Клиенты.Добавить();
				Строка.Представление = СтрШаблон("%1  %2  Адрес %3", 
					Выборка.Номер,                                        
					Выборка.Контрагент,
					Выборка.Адрес);
				Строка.Вес 					= ВесПФ; 
				Строка.Количество 	= Цел(Строка.Вес / 20) + 1;  
				Строка.Ссылка 			= Выборка.Документ;    
				Строка.Распечатать 	= Истина;  
				Строка.Адрес 				= Выборка.Адрес;   
				Строка.Контрагент 	= Выборка.Контрагент; 
				Строка.Дата 				= Выборка.Дата;
			КонецЕсли; 
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВесПФ(Ссылка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
		|	ЗаказПокупателяЗапасы.Количество КАК Количество,
		|	ЗаказПокупателяЗапасы.Номенклатура.КатегорияНоменклатуры КАК Категория,
		|	ЗаказПокупателяЗапасы.Номенклатура.Вес * ЗаказПокупателяЗапасы.Количество КАК Вес
		|ИЗ
		|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
		|ГДЕ
		|	ЗаказПокупателяЗапасы.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	ВесПФ = 0;   
	
	КатегорияПФ = Справочники.КатегорииНоменклатуры.НайтиПоНаименованию("Полуфабрикаты");
	Пока Выборка.Следующий() Цикл
			Если Выборка.Категория = КатегорияПФ Тогда 
			ВесПФ = ВесПФ + Выборка.Вес;
		КонецЕсли;
	КонецЦикла;
  Возврат ВесПФ;
КонецФункции 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Дата = ТекущаяДатаСеанса() + 60*60*24;
КонецПроцедуры

&НаКлиенте
Процедура Распечатать(Команда)  
	ТабДок = РаспечататьНаСервере();    
	ТабДок.Показать("Печать на пакетах");
КонецПроцедуры   

&НаСервере
Функция РаспечататьНаСервере() Экспорт
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСлева = 0;
	ТабДок.ПолеСнизу = 0;
	ТабДок.ПолеСправа = 0;
	ТабДок.Автомасштаб=Истина;
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	Макет = ОбъектОбработки.ПолучитьМакет("Макет");
	
	////////////////////////////////////////////
	//Обход тч
	Для каждого Строка Из Объект.Клиенты Цикл
		Если Строка.Распечатать Тогда
				//Макет.Параметры.Контрагент = Строка.Контрагент;	
				//Макет.Параметры.Адрес = Строка.Адрес;
				//Макет.Параметры.Дата = Формат(Строка.Дата, "ДЛФ=Д");
				Макет.Параметры.Заполнить(Строка);
				Обл = Макет.ПолучитьОбласть("БезДоборки");
				//Вывод по страницам  Макет
				
				Для Сч = 1 По Строка.Количество Цикл
					Обл.Параметры.ПакКон = Строка.Количество;
					Обл.Параметры.Кол = Сч;
					ТабДок.Вывести(Обл);
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла;		
				
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВВХНаСервере();
	
	Возврат ТабДок; 
КонецФункции

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	Для каждого Строка Из Объект.Клиенты Цикл
		Строка.Распечатать = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
		Для каждого Строка Из Объект.Клиенты Цикл
		Строка.Распечатать = Ложь;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура МаршрутПриИзменении(Элемент)
	СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОтчета(Команда)                         
 ТабДок = СформироватьПечатнуюФорму();
 ТабДок.Показать();
КонецПроцедуры

&НаСервере
Функция СформироватьПечатнуюФорму()     
	
	ВременнаяТЗ = Новый ТаблицаЗначений;
	ВременнаяТЗ.Колонки.Добавить("Номенклатура",,"Номенклатура");
	ВременнаяТЗ.Колонки.Добавить("Количество",,"Количество");
	ВременнаяТЗ.Колонки.Добавить("Вес",,"Вес");
	
	КатегорияПФ = Справочники.КатегорииНоменклатуры.НайтиПоНаименованию("Полуфабрикаты");
	ОбъектФормы = РеквизитФормыВЗначение("Объект");
	ТабДок = Новый ТабличныйДокумент; 
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;

	Макет = ОбъектФормы.ПолучитьМакет("МакетСборка");
	ШапкаМаршрута 			= Макет.ПолучитьОбласть("ШапкаМаршрута"); 
	ТаблицаМагазин 			= Макет.ПолучитьОбласть("ТаблицаМагазин"); 
	ТаблицаНоменклатура = Макет.ПолучитьОбласть("ТаблицаНоменклатура");
	ТаблицаПодвал 			= Макет.ПолучитьОбласть("ТаблицаПодвал");
	ЗаголовокОбщий 			= Макет.ПолучитьОбласть("ЗаголовокОбщий");
	СтрокаОбщий 				= Макет.ПолучитьОбласть("СтрокаОбщий");
	ПодвалОбщий 				= Макет.ПолучитьОбласть("ПодвалОбщий");
	ТаблицаВес					= Макет.ПолучитьОбласть("ТаблицаВес");
	
	///////////////////////////////////
	// По Магазинам
	ЗаполнитьЗначенияСвойств(ШапкаМаршрута.Параметры, Объект);
	ТабДок.Вывести(ШапкаМаршрута);
	
	
	//////////////////////////////////
	//	Перебор Контрагентов
	
	Для каждого Строка Из Объект.Клиенты Цикл
		Если Не Строка.Распечатать Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаМагазин.Параметры.Контрагент = Строка.Ссылка.Контрагент;
		ТаблицаМагазин.Параметры.Адрес = Строка.Адрес;
		
		ТабДок.Вывести(ТаблицаМагазин);
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
			|	ЗаказПокупателяЗапасы.Количество КАК Количество,
			|	ЗаказПокупателяЗапасы.Номенклатура.КатегорияНоменклатуры КАК Категория,
			|	ЗаказПокупателяЗапасы.Номенклатура.Вес * ЗаказПокупателяЗапасы.Количество КАК Вес
			|ИЗ
			|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
			|ГДЕ
			|	ЗаказПокупателяЗапасы.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номенклатура
			|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("Ссылка", Строка.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		
		///////////////////////////////////
		//	Перебор Табличной части заказа
		Вес = 0;	
		Пока Выборка.Следующий() Цикл
			Если Выборка.Категория = КатегорияПФ Тогда 
				Вес = Вес + Выборка.Вес;
				ЗаполнитьЗначенияСвойств(ТаблицаНоменклатура.Параметры, Выборка);  
				ТаблицаНоменклатура.Параметры.Номенклатура = Строка(ТаблицаНоменклатура.Параметры.Номенклатура) + "		=> (" + Выборка.Вес + "кг)";	
				ТабДок.Вывести(ТаблицаНоменклатура);   
				
				ЗаполнитьЗначенияСвойств(ВременнаяТЗ.Добавить(), Выборка);
			КонецЕсли;
			
		КонецЦикла;
		ТаблицаВес.Параметры.Вес = Вес;
		ТабДок.Вывести(ТаблицаВес);
	КонецЦикла;
	
	
	
	///////////////////////////////////
	// Общий    
	
	ТабДок.Вывести(ЗаголовокОбщий);
	ВременнаяТЗ.Свернуть("Номенклатура","Количество");
	ВременнаяТЗ.Сортировать("Номенклатура Возр");
	Для каждого СтрокаТЗ Из ВременнаяТЗ Цикл
			ЗаполнитьЗначенияСвойств(СтрокаОбщий.Параметры, СтрокаТЗ);
	    ТабДок.Вывести(СтрокаОбщий);
	КонецЦикла;
	
	ТабДок.Вывести(ПодвалОбщий);
	
	Возврат ТабДок;
	
КонецФункции 	

&НаКлиенте
Процедура ПоместитьВВХ(Команда)
	
	
КонецПроцедуры


&НаСервере
Процедура ПоместитьВВХНаСервере()  
	Хранилище = Константы.ВременнаяТаблицаЗаявок.Получить();
	ТЗ = Хранилище.Получить();

	Если ТЗ = Неопределено Тогда 
		
		ТЗ = СоздатьВременнуюТаблицу();
		
	КонецЕсли;
	
	Для каждого Строка Из Объект.Клиенты Цикл
	
		Если Строка.Распечатать Тогда
			СтрокаТЗ = ТЗ.Добавить();	
			ЗаполнитьЗначенияСвойств(СтрокаТЗ, Строка);
		КонецЕсли;
		
	
	КонецЦикла;
		
	Хранилище = Новый ХранилищеЗначения(ТЗ);     
	
	Константы.ВременнаяТаблицаЗаявок.Установить(Хранилище);
КонецПроцедуры 


&НаКлиенте
Процедура ПолучитьИзВХ(Команда)
	ПолучитьИзВХНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПолучитьИзВХНаСервере()
	Хранилище = Константы.ВременнаяТаблицаЗаявок.Получить();
	НоваяТЗ = Хранилище.Получить();	
	
	Если НоваяТЗ = Неопределено Тогда
		Сообщить("Неудача");
	Иначе
		Для каждого Строка из НоваяТЗ Цикл
			Сообщить(Строка.Контрагент);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОчиститьВХ(Команда)
	ОчиститьВХНаСервере();
КонецПроцедуры


&НаСервере
Процедура ОчиститьВХНаСервере()
	Хранилище = Константы.ВременнаяТаблицаЗаявок.Получить();
	НоваяТЗ = Хранилище.Получить();	
	НоваяТЗ.Очистить();
	Константы.ВременнаяТаблицаЗаявок.Установить(НоваяТЗ); 	
КонецПроцедуры

&НаСервере
Функция СоздатьВременнуюТаблицу()
		ТЗ = Новый ТаблицаЗначений;
		ТЗ.Колонки.Добавить("Контрагент",,"Контрагент"); 
		ТЗ.Колонки.Добавить("Вес",,"Вес");
		ТЗ.Колонки.Добавить("Количество",,"Распечатать");
		ТЗ.Колонки.Добавить("Ссылка",,"Ссылка");   
		
		Возврат ТЗ;
КонецФункции

&НаКлиенте
Процедура КлиентыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	  Ссылка = Элементы.Клиенты.ТекущиеДанные.Ссылка;			
		ПоказатьЗначение(, Ссылка);	
КонецПроцедуры


